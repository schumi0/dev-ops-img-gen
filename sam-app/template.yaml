AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

Globals:
  Function:
    Timeout: 60
    MemorySize: 128



Resources:
  ImageGenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./sam-app/image_gen/app.py
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment: 
        Variables:
          S3_BUCKET: "pgr301-couch-explorers"
          CANDIDATE_NR: "55"
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:ListBucket"
            Resource:
              - "arn:aws:s3:::pgr301-couch-explorers/55/*"
        - Statement:
            Effect: Allow
            Action:
              - "bedrock:InvokeModel"
            Resource: "*"
      Architectures:
        - x86_64
      Events:
        ImageGen:
          Type: Api
          Properties:
            Path: /generate
            Method: post

  CustomResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: InsightsMonitoring-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  InsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: CustomResourceGroup
      AutoConfigurationEnabled: 'true'



# Outputs
Outputs:
  ImageGenApi:
    Description: "API Gateway endpoint URL for Prod stage for Image Gen function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate/"

  ImageGenFunction:
    Description: "Image Gen Lambda Function ARN"
    Value: !GetAtt ImageGenFunction.Arn

  ImageGenerationFunctionIamRole:
    Description: Implicit IAM Role created for Image Generation function
    Value: !GetAtt ImageGenFunctionRole.Arn

